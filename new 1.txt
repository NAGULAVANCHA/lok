import java.o.*
public class DVR
{
static int graph[][];
via[][]
rt[][]
v
e
public static void main(String args[]) throws IoException
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
enter number of vertices
br.readLine()
enter number of edges
br.readLine()
graph=new int[v][v]
rt
via
for(int i=0 to v)
for (int j=0 to v)
if i=j
g[i][j]=0
via=i
felse
g[i][j]=9999
}
for(int i=0;i<e;i++)
{
please enter data for edges i+1
sorce
s=integer.parseInt(br.readLine)
s--;
d=destinatiom
cost
g[s][d]=c;
g[d][s]=c;
dvr_calc_disp("the intial routing table are");
cost changed
dvr_calc_disp("the new ")
static void dvr_calc_disp(String message)
{
init_tables();
update_tables();
System.out.println(message);
print_table();
}
static void init_tables()
{
for(int i=0 to v)
for(int j=0 to v)
{
if(i==j)
{
rt[i][j]=0;
via[i][j]=i;
}
else
{
rt[i][j]=9999
via[i]=100;
}
}
static void update_tables()
{
int k=0;
for(int i=0;i<4*v;i++)
{
update_table(k);
k++;
if(k==v)
{
k=0;}
}}
static void update_table(int source)
{
for(int i=0;i<v;i++)
{
if(graph[source][i]!=9999)
{
int dist=graph[source][i]
for(int j=0;j<v;j++)
{
int inter_dist=rt[i][j];
if(via[i][j]==source)
inter_dist=9999;
if(dist+inter_
